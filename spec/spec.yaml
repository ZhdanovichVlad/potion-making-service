openapi: 3.0.0
servers:
  - url: 'http://petstore.swagger.io/v2'
info:
  description: >-
    This is a sample server Petstore server. For this sample, you can use the api key
    `special-key` to test the authorization filters.
  version: 1.0.0
  title: OpenAPI Petstore
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: pet
    description: Everything about your Pets
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
paths:
  /recipes:
    get:
      summary: returns an array of recipes
      description: returns an array of recipes from a recipe table
      operationId: GetAllRecipes
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResponseRecipes'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResponseRecipes'
        '404':
          description: not found
        '500':
          description: internal server error

  /ingredients:
    get:
      summary: returns an array of ingredients
      description: returns an array of ingredients from a ingredient table.
      operationId: GetAllIngredients
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResponseIngredients'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResponseIngredients'
        '404':
          description: not found
        '500':
          description: internal server error
components:
  schemas:
    Recipe:
      title: Recipe
      description: Description of recipe in the storage database
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        brew_time_seconds:
          type: integer
          format: int64
    Ingredient:
      title: Ingredient
      description: Description of ingredient in the storage database
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    ApiResponseRecipes:
      title: Recipes response
      description: Response with a list of recipes
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        recipes:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'

    ApiResponseIngredients:
      title: Ingredients response
      description: Response with a list of ingredients
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'